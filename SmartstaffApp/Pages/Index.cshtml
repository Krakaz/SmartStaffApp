@page
@model IndexModel
@using Extensions
@{
    ViewData["Title"] = "Index";
}

@{
    <div class="btn-group">
        <form method="post" asp-page-handler="updateInterview"><button class="btn btn-primary btn-sm" style="margin-left: 10px;">Итнервью</button></form>
        <form method="post" asp-page-handler="updateStaff"><button class="btn btn-primary btn-sm" style="margin-left: 10px;">Сотрудники</button></form>
    </div>

    @*<div id="staffChart"></div>*@

    <p><h3>Текущее состояние</h3></p>


    var firstTargetClass = (Model.CurrentData.FirstTargetDelta <= 0) ? "class=table-success" : "";
    var secondTargetClass = (Model.CurrentData.SecondTargetCount <= 0) ? "class=table-success" : "";
    var yearTargetClass = (Model.CurrentData.YearTargetCount <= 0) ? "class=table-success" : "";


    <table class="table table-striped">
        <tr class="table-primary" style="font-weight: bold;">
            <td>Кол-во сотрудников</td>
            <td>Рубеж 1</td>
            <td>Рубеж 2</td>
            <td>Целевое</td>
        </tr>
        <tr>
            <td>@Model.CurrentData.CurrentCount</td>
            <td @firstTargetClass>@Model.CurrentData.FirstTargetCount</td>
            <td @secondTargetClass>@Model.CurrentData.SecondTargetCount</td>
            <td @yearTargetClass>@Model.CurrentData.YearTargetCount</td>
        </tr>
        <tr>
            <td>Осталось</td>
            <td @firstTargetClass>@Model.CurrentData.FirstTargetDelta</td>
            <td @secondTargetClass>@Model.CurrentData.SecondTargetDelta</td>
            <td @yearTargetClass>@Model.CurrentData.YearTargetDelta</td>
        </tr>
    </table>
    <br>
    <br>

    <p><h3>Сотрудники</h3></p>
    <div>
        @{
            <table class="table table-striped">
                <tr class="table-primary" style="font-weight: bold;">
                    @foreach (var item in Model.ShortActiveStaffs)
                    {
                        <td>@item.DirectionName</td>
                    }
                    <td>Всего</td>
                </tr>
                <tr>
                    @foreach (var item in Model.ShortActiveStaffs)
                    {
                        <td>@item.StaffCount</td>
                    }
                    <td sstyle="font-weight: bold;">@Model.ShortActiveStaffs.Sum(el => el.StaffCount)</td>
                </tr>
            </table>
        }
    </div>
    <br />

    <p><h3>Прирост по месяцам</h3></p>
    <div>
        @{
            <table class="table table-striped">
                <tr class="table-primary" style="font-weight: bold;">
                    <th>Месяц</th>
                    @foreach (var item in Model.TotalGrowByMonthAndDirection.Header)
                    {
                        <th>@item.Name</th>
                    }
                    <th>Всего</th>
                </tr>

                @foreach (var item in Model.TotalGrowByMonthAndDirection.Values)
                {
                    <tr>
                        <td>@item.MonthName</td>
                        @foreach (var direction in Model.TotalGrowByMonthAndDirection.Header)
                        {
                            var value = item.TotalGrowByDirection.Where(el => el.DirectionId == direction.Id).FirstOrDefault()?.TotalGrowCount;
                            var cellClass = value < 0 ? "class = table-danger" : "";

                            <td @cellClass>@value</td>
                        }
                        @{
                            var totalValue = item.TotalGrowByDirection.Sum(el => el.TotalGrowCount);
                            var totalCellClass = totalValue < 0 ? "class = table-danger" : "";
                        }
                        <td @totalCellClass style="font-weight: bold;">@totalValue</td>
                    </tr>
                }


            </table>
        }
    </div>

    <br>
    <br>
    <p><h3>Сводка по месяцам</h3></p>
    <table class="table table-striped">
        <tr class="table-primary" style="font-weight: bold;">
            <td>Месяц</td>
            <td>Нанято</td>
            <td>Приехало</td>
            <td>Уволено</td>
            <td>Итоговый прирост</td>
            <td>Проведено интервью</td>
            <td>Результативность</td>
        </tr>
        @foreach (var row in @Model.InformationByMonth)
        {
            <tr>
                <td>@row.MonthName</td>
                <td>@row.IncomingCnt</td>
                <td>@row.ArivedCnt</td>
                <td>@row.FiredCnt</td>
                <td>@row.CulculateCount</td>
                <td>@row.InterviewCnt</td>
                <td>@row.ResultativityCnt %</td>
            </tr>
        }

    </table>


}

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">

    // Load the Visualization API and the corechart package.
    google.charts.load('current', { 'packages': ['corechart', 'line']});

    // Set a callback to run when the Google Visualization API is loaded.
    google.charts.setOnLoadCallback(drawChart);

    // Callback that creates and populates a data table,
    // instantiates the pie chart, passes in the data and
    // draws it.
    function drawChart() {


        var data = new google.visualization.DataTable();
        data.addColumn('number', 'Месяц');
        data.addColumn('number', 'Кол-во');
        data.addRows([
            @foreach(var data in Model.TotalGrowByMonthAndDirection.Values.Where(el => el.Month != 13).OrderBy(el => el.Month))
            {
                <text>[@data.Month, @data.TotalGrowByDirection.Sum(el => el.TotalGrowCount)], </text>
            }
        ]);

        // Set chart options
        var options = {
            'title': 'Динамика сотрудников',
            curveType: 'function',
            pointSize: 7,
            'width': '100%',
            'height': 500
        };

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.LineChart(document.getElementById('staffChart'));
        chart.draw(data, options);
    }
</script>